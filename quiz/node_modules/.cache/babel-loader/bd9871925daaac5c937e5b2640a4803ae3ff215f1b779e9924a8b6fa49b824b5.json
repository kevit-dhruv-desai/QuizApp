{"ast":null,"code":"var _jsxFileName = \"/home/kevit/Trainee Task/React Task 2/quiz/src/Component/ResultCard.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport \"./ResultCard.css\";\nimport { quizData, hindidata } from \"../Data/QuizData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultCard = () => {\n  _s();\n  const languageselect = useSelector(state => state.language.value);\n  const language = languageselect ? quizData : hindidata;\n  const score = useSelector(state => state.score.score);\n  const answer = useSelector(state => {\n    return state.answer.answer;\n  });\n  let name = useSelector(state => {\n    return state.information.nameValue;\n  });\n  let surname = useSelector(state => {\n    return state.information.surnameValue;\n  });\n  const finalanswer = useSelector(state => {\n    return state.finalanswer.finalanswer;\n  });\n  let yourans = Object.entries(finalanswer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"paragraph\",\n        children: [\"Congratulation! \", surname, \" \", name, \" you are successfully completed your exam.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score is:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [score, \"/\", finalanswer.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultCard, \"QjtfDnt34T6zcL2Ay6SxMmxGF6Q=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ResultCard;\nexport default ResultCard;\nvar _c;\n$RefreshReg$(_c, \"ResultCard\");","map":{"version":3,"names":["useSelector","quizData","hindidata","jsxDEV","_jsxDEV","ResultCard","_s","languageselect","state","language","value","score","answer","name","information","nameValue","surname","surnameValue","finalanswer","yourans","Object","entries","children","id","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/kevit/Trainee Task/React Task 2/quiz/src/Component/ResultCard.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport \"./ResultCard.css\";\nimport { quizData,hindidata } from \"../Data/QuizData\";\nconst ResultCard = () => {\n  const languageselect = useSelector((state) => state.language.value);\n  const language = languageselect ? quizData : hindidata;\n  const score = useSelector((state)=>(state.score.score))\n  const answer = useSelector((state) => {\n    return state.answer.answer;\n  });\n\n  let name = useSelector((state) => {\n    return state.information.nameValue;\n  });\n  let surname = useSelector((state) => {\n    return state.information.surnameValue;\n  });\n  const finalanswer = useSelector((state) => {\n    return state.finalanswer.finalanswer;\n  });\n  let yourans = Object.entries(finalanswer);\n\n  return (\n    <div>\n      <div>\n        <p id=\"paragraph\">\n          Congratulation! {surname} {name} you are successfully completed your\n          exam.\n        </p>\n        <p>Your Score is:<span>{score}/{finalanswer.length}</span></p>\n      </div>\n\n      {/* <div className=\"result\">\n        <div>\n          <p>Your Answer:</p>\n          {yourans.map((ans) => (\n            <div>\n              <span id=\"key\">{ans[0]}:</span>\n              <span>{ans[1]}</span>\n            </div>\n          ))}\n        </div>\n\n        <div>\n          <p>Correct Answer:</p>\n          {answer.map((correct) => (\n            <div>{correct.answer}</div>\n          ))}\n        </div>\n      </div> */}\n    </div>\n  );\n};\nexport default ResultCard;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAO,kBAAkB;AACzB,SAASC,QAAQ,EAACC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,cAAc,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,KAAK,CAAC;EACnE,MAAMD,QAAQ,GAAGF,cAAc,GAAGN,QAAQ,GAAGC,SAAS;EACtD,MAAMS,KAAK,GAAGX,WAAW,CAAEQ,KAAK,IAAIA,KAAK,CAACG,KAAK,CAACA,KAAM,CAAC;EACvD,MAAMC,MAAM,GAAGZ,WAAW,CAAEQ,KAAK,IAAK;IACpC,OAAOA,KAAK,CAACI,MAAM,CAACA,MAAM;EAC5B,CAAC,CAAC;EAEF,IAAIC,IAAI,GAAGb,WAAW,CAAEQ,KAAK,IAAK;IAChC,OAAOA,KAAK,CAACM,WAAW,CAACC,SAAS;EACpC,CAAC,CAAC;EACF,IAAIC,OAAO,GAAGhB,WAAW,CAAEQ,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACM,WAAW,CAACG,YAAY;EACvC,CAAC,CAAC;EACF,MAAMC,WAAW,GAAGlB,WAAW,CAAEQ,KAAK,IAAK;IACzC,OAAOA,KAAK,CAACU,WAAW,CAACA,WAAW;EACtC,CAAC,CAAC;EACF,IAAIC,OAAO,GAAGC,MAAM,CAACC,OAAO,CAACH,WAAW,CAAC;EAEzC,oBACEd,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAGmB,EAAE,EAAC,WAAW;QAAAD,QAAA,GAAC,kBACA,EAACN,OAAO,EAAC,GAAC,EAACH,IAAI,EAAC,4CAElC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACJvB,OAAA;QAAAkB,QAAA,GAAG,gBAAc,eAAAlB,OAAA;UAAAkB,QAAA,GAAOX,KAAK,EAAC,GAAC,EAACO,WAAW,CAACU,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC1D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAoBF;AAEV,CAAC;AAACrB,EAAA,CAjDID,UAAU;EAAA,QACSL,WAAW,EAEpBA,WAAW,EACVA,WAAW,EAIfA,WAAW,EAGRA,WAAW,EAGLA,WAAW;AAAA;AAAA6B,EAAA,GAd3BxB,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}