{"ast":null,"code":"var _jsxFileName = \"/home/kevit/Trainee Task/React Task 2/quiz/src/Component/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport classes from \"./Quiz.module.css\";\nimport { quizData, hindidata } from \"../Data/QuizData\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [clickOption, setClickOption] = useState(0);\n  const [score, setScore] = useState(0);\n  const languageselect = useSelector(state => state.language.value);\n  const language = languageselect ? quizData : hindidata;\n  let {\n    quizID\n  } = useParams();\n  let navigate = useNavigate();\n  const nextQuestion = () => {\n    if (quizID < language.length) {\n      navigate(`/quiz/${Number(quizID) + 1}`);\n    }\n    updateScore();\n  };\n  const previousQuestion = () => {\n    if (quizID > language.length - 4) {\n      navigate(`/quiz/${Number(quizID) - 1}`);\n    }\n  };\n  const updateScore = () => {\n    if (clickOption === language[quizID].answer) {\n      setScore(score + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.maincontainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.heading,\n        children: \"Quiz APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.question,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.questionnumber,\n            children: [quizID, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: language[quizID - 1].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.option,\n          children: language[quizID - 1].options.map((option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.optionbtn,\n              onClick: () => {\n                setClickOption(i + 1);\n              },\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Next\",\n          className: classes.button,\n          onClick: nextQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Previous\",\n          className: classes.button,\n          onClick: previousQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"xdnj3ma1sqMgTqcxObNWwKKFT2Y=\", false, function () {\n  return [useSelector, useParams, useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["classes","quizData","hindidata","useParams","useNavigate","useSelector","useState","jsxDEV","_jsxDEV","Quiz","_s","clickOption","setClickOption","score","setScore","languageselect","state","language","value","quizID","navigate","nextQuestion","length","Number","updateScore","previousQuestion","answer","className","maincontainer","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","container","question","questionnumber","option","options","map","i","optionbtn","onClick","type","button","_c","$RefreshReg$"],"sources":["/home/kevit/Trainee Task/React Task 2/quiz/src/Component/Quiz.jsx"],"sourcesContent":["import classes from \"./Quiz.module.css\";\nimport { quizData,hindidata } from \"../Data/QuizData\";\nimport { useParams,useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\n\n\nconst Quiz = () => {\n  const[clickOption,setClickOption]=useState(0)\n  const[score,setScore]=useState(0)\n  const languageselect = useSelector((state) => state.language.value)\n  const language = languageselect ? quizData : hindidata\n let {quizID} = useParams()\n let navigate = useNavigate()\n\n\nconst nextQuestion = () => {\n  if(quizID <language.length){\n  navigate(`/quiz/${Number(quizID)+1}`)\n  }\n  updateScore();\n};\n\n\nconst previousQuestion = () => {\n  if(quizID > language.length-4){\n  navigate(`/quiz/${Number(quizID)-1}`)\n  }\n};\n\n const updateScore =()=>{\n  if(clickOption === language[quizID].answer){\n    setScore(score+1);\n  }\n }\n\n  return (\n    <div className={classes.maincontainer}>\n      <div>\n        <p className={classes.heading}>Quiz APP</p>\n        <div className={classes.container}>\n          <div className={classes.question}>\n            <span className={classes.questionnumber}>\n              {quizID}.\n            </span>\n            <span>{language[quizID-1].question}</span>\n          </div>\n          <div className={classes.option}>\n            {language[quizID-1].options.map((option,i) => {\n              return <button key={i} className={classes.optionbtn} onClick={()=>{setClickOption(i+1)}}>{option}</button>;\n            })}\n          </div>\n          <input\n            type=\"button\"\n            value=\"Next\"\n            className={classes.button}\n            onClick={nextQuestion}\n          />\n          <input\n            type=\"button\"\n            value=\"Previous\"\n            className={classes.button}\n            onClick={previousQuestion}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Quiz;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}