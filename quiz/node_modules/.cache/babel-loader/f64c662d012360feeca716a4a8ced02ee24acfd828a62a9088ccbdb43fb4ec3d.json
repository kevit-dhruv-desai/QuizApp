{"ast":null,"code":"var _jsxFileName = \"/home/kevit/Trainee Task/React Task 2/quiz/src/Component/pages/ResultCard.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport '../assest/ResultCard.css';\nimport { hindidata, quizData } from \"../../Data/QuizData\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultCard = () => {\n  _s();\n  console.log(navigate);\n  const [visible, setVisible] = useState(false);\n  const languageselect = useSelector(state => state.language.value);\n  const language = languageselect ? quizData : hindidata;\n  // const score = useSelector((state)=>(state.score.score))\n  const answer = useSelector(state => {\n    return state.answer.answer;\n  });\n  let name = useSelector(state => {\n    return state.information.nameValue;\n  });\n  let surname = useSelector(state => {\n    return state.information.surnameValue;\n  });\n  const finalanswer = useSelector(state => {\n    return state.finalanswer.finalanswer;\n  });\n  console.log(finalanswer);\n  let yourans = Object.values(finalanswer);\n  // console.log(yourans);\n\n  const sc = answer.reduce((acc, que, i) => {\n    if (finalanswer[i + 1] === que.answer) acc += 1;\n    return acc;\n  }, 0);\n  // console.log({ sc });\n  // console.log(items);\n  // console.log(answer);\n\n  const right = yourans.filter((right, num) => right !== language[num].answer);\n  console.log(right);\n  useEffect(() => {\n    const handleBackButton = () => {\n      window.location.href = '/';\n    };\n    window.addEventListener('popstate', handleBackButton);\n    return () => {\n      window.removeEventListener('popstate', handleBackButton);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"paragraph\",\n        children: [\"Congratulation! \", surname, \" \", name, \" you are successfully completed your exam.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"score\",\n        children: [\"Your Score is:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"scorenumber\",\n          children: [sc, \"/\", language.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"view\",\n      onClick: () => {\n        setVisible(!visible);\n      },\n      children: \"View Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"maincontent\",\n      children: language.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"mainsection\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [i + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"question\",\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"showoption\",\n              children: item.options.map((option, index) => {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `btn ${language[i].answer === option ? \"green\" : yourans[i] === option ? \"red\" : \"\"}`,\n                  children: option\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ResultCard, \"xqlhbxEsTVptwznU8P+fXCjhMl0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = ResultCard;\nexport default ResultCard;\nvar _c;\n$RefreshReg$(_c, \"ResultCard\");","map":{"version":3,"names":["useSelector","hindidata","quizData","useState","useEffect","jsxDEV","_jsxDEV","ResultCard","_s","console","log","navigate","visible","setVisible","languageselect","state","language","value","answer","name","information","nameValue","surname","surnameValue","finalanswer","yourans","Object","values","sc","reduce","acc","que","i","right","filter","num","handleBackButton","window","location","href","addEventListener","removeEventListener","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","item","question","options","option","index","_c","$RefreshReg$"],"sources":["/home/kevit/Trainee Task/React Task 2/quiz/src/Component/pages/ResultCard.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport '../assest/ResultCard.css';\nimport { hindidata, quizData} from \"../../Data/QuizData\";\nimport { useState, useEffect } from \"react\";\n\n\n\nconst ResultCard = () => {\n  console.log(navigate);\n  const [visible, setVisible] = useState(false);\n  const languageselect = useSelector((state) => state.language.value);\n  const language = languageselect ? quizData : hindidata;\n  // const score = useSelector((state)=>(state.score.score))\n  const answer = useSelector((state) => {\n    return state.answer.answer;\n  });\n\n  let name = useSelector((state) => {\n    return state.information.nameValue;\n  });\n  let surname = useSelector((state) => {\n    return state.information.surnameValue;\n  });\n  const finalanswer = useSelector((state) => {\n    return state.finalanswer.finalanswer;\n  });\n  console.log(finalanswer);\n  let yourans = Object.values(finalanswer);\n  // console.log(yourans);\n\n  const sc = answer.reduce((acc, que, i) => {\n    if (finalanswer[i + 1] === que.answer) acc += 1;\n    return acc;\n  }, 0);\n  // console.log({ sc });\n  // console.log(items);\n  // console.log(answer);\n\n  const right = yourans.filter((right, num) => right !== language[num].answer);\n  console.log(right);\n\n  useEffect(() => {\n    const handleBackButton = () => {\n      window.location.href = '/';\n    };\n\n    window.addEventListener('popstate', handleBackButton);\n\n    return () => {\n      window.removeEventListener('popstate', handleBackButton);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"score-container\">\n        <p id=\"paragraph\">\n          Congratulation! {surname} {name} you are successfully completed your\n          exam.\n        </p>\n        <p id=\"score\">\n          Your Score is:\n          <span id=\"scorenumber\">\n            {sc}/{language.length}\n          </span>\n        </p>\n      </div>\n      <button\n        id=\"view\"\n        onClick={() => {\n          setVisible(!visible);\n        }}\n      >\n        View Answer\n      </button>\n\n      {/* <div className=\"result\">\n        <div>\n          <p>Your Answer:</p>\n          {yourans.map((ans) => (\n            <div>\n              <span id=\"key\">{ans[0]}:</span>\n              <span>{ans[1]}</span>\n            </div>\n          ))}\n        </div>\n\n        <div>\n          <p>Correct Answer:</p>\n          {answer.map((correct) => (\n            <div>{correct.answer}</div>\n          ))}\n        </div>\n      </div> */}\n\n      {visible && (\n        <div className=\"maincontent\">\n          {language.map((item, i) => {\n            return (\n              <div key={i}>\n                <section className=\"mainsection\">\n                  <div>\n                    <span>{i + 1}.</span>\n                    <span id=\"question\">{item.question}</span>\n                  </div>\n                  <div className=\"showoption\">\n                    {item.options.map((option, index) => {\n                      return (\n                        <button\n                          key={index}\n                          className={`btn ${\n                            language[i].answer === option\n                              ? \"green\"\n                              : yourans[i] === option\n                              ? \"red\"\n                              : \"\"\n                          }`}\n                        >\n                          {option}\n                        </button>\n                      );\n                    })}\n                  </div>\n                  {/* <div>\n                    { <p id=\"correct\">CORRECT ANSWER: {item.answer}</p> }\n                    <p id=\"ownans\">YOUR ANSWER: {yourans[i]}</p>\n                  </div> */}\n                </section>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default ResultCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}